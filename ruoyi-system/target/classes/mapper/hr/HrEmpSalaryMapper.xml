<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.hr.mapper.HrEmpSalaryMapper">
    
    <resultMap type="HrEmpSalary" id="HrEmpSalaryResult">
        <result property="id"    column="id"    />
        <result property="employeeId"    column="employee_id"    />
        <result property="salaryId"    column="salary_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="employeeName"    column="name"    />
        <result property="salaryName"    column="salary_name"    />
    </resultMap>

    <sql id="selectHrEmpSalaryVo">
        select s.id, s.employee_id, s.salary_id,s.create_time, s.update_time,
        e.name,sa.salary_name
        from hr_emp_salary s
        left join  hr_employee e on s.employee_id = e.employee_id
        left join  hr_salary sa on s.salary_id = sa.salary_id
    </sql>

    <select id="selectHrEmpSalaryList" parameterType="HrEmpSalary" resultMap="HrEmpSalaryResult">
        <include refid="selectHrEmpSalaryVo"/>
        <where>
            <if test="employeeName != null  and employeeName != ''"> and e.name like concat('%', #{employeeName}, '%')</if>
            <if test="salaryName != null  and salaryName != ''"> and sa.salary_name like concat('%', #{salaryName}, '%')</if>
            <if test="employeeId != null "> and s.employee_id = #{employeeId}</if>
            <if test="salaryId != null "> and s.salary_id = #{salaryId}</if>
        </where>
    </select>

    <select id="selectHrEmpSalaryById" parameterType="Long" resultMap="HrEmpSalaryResult">
        <include refid="selectHrEmpSalaryVo"/>
        where s.id = #{id}
    </select>

        
    <insert id="insertHrEmpSalary" parameterType="HrEmpSalary" useGeneratedKeys="true" keyProperty="id">
        insert into hr_emp_salary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeId != null">employee_id,</if>
            <if test="salaryId != null">salary_id,</if>
            create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeId != null">#{employeeId},</if>
            <if test="salaryId != null">#{salaryId},</if>
            sysdate()
         </trim>
    </insert>

    <update id="updateHrEmpSalary" parameterType="HrEmpSalary">
        update hr_emp_salary
        <trim prefix="SET" suffixOverrides=",">
            <if test="employeeId != null">employee_id = #{employeeId},</if>
            <if test="salaryId != null">salary_id = #{salaryId},</if>
            update_time = sysdate()
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHrEmpSalaryById" parameterType="Long">
        delete from hr_emp_salary where id = #{id}
    </delete>

    <delete id="deleteHrEmpSalaryByIds" parameterType="String">
        delete from hr_emp_salary where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteHrEmployeeByEmployeeIds" parameterType="String">
        delete from hr_employee where employee_id in 
        <foreach item="employeeId" collection="array" open="(" separator="," close=")">
            #{employeeId}
        </foreach>
    </delete>

    <delete id="deleteHrEmployeeByEmployeeId" parameterType="Long">
        delete from hr_employee where employee_id = #{employeeId}
    </delete>

    <insert id="batchHrEmployee">
        insert into hr_employee( employee_id, name, gender, birthday, id_card, wedlock, nation, native_place, politic, email, phone, address, dept_id, job_level_id, post_id, engage_form, tiptop_degree, specialty, school, begin_date, work_state, work_id, contract_term, conversion_time, not_work_date, begin_contract, end_contract, work_age) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.employeeId}, #{item.name}, #{item.gender}, #{item.birthday}, #{item.idCard}, #{item.wedlock}, #{item.nation}, #{item.nativePlace}, #{item.politic}, #{item.email}, #{item.phone}, #{item.address}, #{item.deptId}, #{item.jobLevelId}, #{item.postId}, #{item.engageForm}, #{item.tiptopDegree}, #{item.specialty}, #{item.school}, #{item.beginDate}, #{item.workState}, #{item.workId}, #{item.contractTerm}, #{item.conversionTime}, #{item.notWorkDate}, #{item.beginContract}, #{item.endContract}, #{item.workAge})
        </foreach>
    </insert>
</mapper>